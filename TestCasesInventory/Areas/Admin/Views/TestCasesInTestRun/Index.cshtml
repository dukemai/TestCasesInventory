@using TestCasesInventory.Presenter.Models
@using PagedList;
@using PagedList.Mvc;
@using TestCasesInventory.Web.Common.Utils;

@model PagedList.IPagedList<TestCasesInTestRunViewModel>
@{
    ViewBag.Title = "TestCases in the TestRun Home Page";
}

@Html.Action("FilterForTestCase", "Filter", new { area = "" })

<table class="table table-bordered">
    <tr>
        <th>
            <h4>@Html.SortableLink(Request, "Title", "Title")</h4>
        </th>
        <th>
            <h4>@Html.SortableLink(Request, "Priority", "Priority")</h4>
        </th>
        <th>
            <h4>TestSuite</h4>
        </th>
        <th>
            <h4>Assign To</h4>
        </th>
        <th>
            <h4>Assign By</h4>
        </th>
        @*<th>
                <h4>@Html.SortableLink(Request, "AssignedBy", "Assigned By")</h4>
            </th>
            <th>
                <h4>@Html.SortableLink(Request, "AssignedTo", "Assigned To")</h4>
            </th>*@
        <th>
            <h4>Actions</h4>
        </th>
        <th>
            <h4>Assign</h4>
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TestCaseTitle)
            </td>

            <td>
                <span class="label @item.PriorityStyleClass">@Html.DisplayFor(modelItem => item.TestCasePriority)</span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TestSuiteTitle)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.AssignedTo)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.AssignedBy)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", "TestCase", new { id = item.TestCaseID }, new { @class = "link-detail" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }) |
                <a href="#" class="delete-testcase" data-target="#basic" data-toggle="modal" data-testcase-id="@item.ID"> Delete</a>
            </td>
            <td>
                @Html.ActionLink("Assign To Me", "AssignToMe", new { id = item.ID, testRunID = item.TestRunID }, new { @class = "btn btn-default" })
                @Html.ActionLink("Assign To User", "GetUsersToAssign", new { id = item.ID }, new { @class = "modal-assign-to-user btn btn-default" })
            </td>
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Request.AddQueryString(new KeyValuePair<string, string>("p", page.ToString())))


@using (Html.BeginForm("RemoveASingleTestCaseFromTestRun", "TestCasesInTestRun"))
{
    <div class="modal fade" id="basic" tabindex="-1" role="alert" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> x </button>
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this item?
                    @Html.Hidden("testCasesInTestRunID")
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" type="button" class="btn btn-default">Cancel</button>
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    
                </div>
            </div>
        </div>
    </div>
}