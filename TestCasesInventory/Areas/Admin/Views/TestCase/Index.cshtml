@using TestCasesInventory.Presenter.Models
@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<TestCaseViewModel>
@{
    ViewBag.Title = "TestCase Home Page";
}

@using (Html.BeginForm("Details", "TestSuite", new { id = ViewBag.TestSuiteID }, FormMethod.Get))
{
    @Html.TextBox("searchByTitle") <input type="submit" value="Search by Title" class="btn btn-default">
}

<table class="table table-bordered">
    <tr>
        <th>
            <h4>@Html.ActionLink("Title", "Details", "TestSuite", new { id = ViewBag.TestSuiteID, sortBy = ViewBag.SortByTitle, searchByTitle = Request.QueryString["searchByTitle"] }, "")</h4>
        </th>
        <th>
            <h4>Priority</h4>
        </th>
        <th>
            <h4>Created By</h4>
        </th>
        <th>
            <h4>Last Modified By</h4>
        </th>
        <th>
            <h4>Created Date</h4>
        </th>
        <th>
            <h4>Last Modified Date</h4>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModified)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModifiedDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
</table>
@Html.PagedListPager(Model, page => Url.Action("Details", "TestSuite" , new { id = ViewBag.TestSuiteID, page, searchByTitle = Request.QueryString["searchByTitle"], sortBy = Request.QueryString["sortBy"] }))

