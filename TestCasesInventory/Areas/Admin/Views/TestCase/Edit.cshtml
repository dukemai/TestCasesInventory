@using TestCasesInventory.Presenter.Models
@using TestCasesInventory.Common
@model TestCaseViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminEditLayout.cshtml";
}

<h3>Edit</h3>
@using (Html.BeginForm("", "", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TestCase</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Priority, new SelectList(
                  new List<Object>{
                       new { value = "Highest" , text = "Highest"  },
                       new { value = "High" , text = "High"  },
                       new { value = "Medium" , text = "Medium"  },
                       new { value = "Low" , text = "Low"  },
                       new { value = "Lowest" , text = "Lowest"  },
                    },
                  "value",
                  "text",
                   2),
                   htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Precondition, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Precondition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precondition, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Expect, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Expect, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Expect, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AttachmentUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="attachment-list">
                    @if (Model.HasAttachment)
                    {
                        foreach (var file in Model.AttachmentUrlList)
                        {
                            <dd>
                                <a href="@Url.Content(file)" download> [@file.GetFileNameFromRelativeUrl()] </a>
                                <a href="#" class="delete-item" data-target="#basic" data-toggle="modal" data-id="@file">Delete</a>
                            </dd>
                        }                        
                    }
                    else
                    {
                        <div>
                            There is no attachment
                        </div>
                    }
                </div>


            </div>
        </div>

        <div class="form-group">
            @Html.Label("Add attachment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <input type="file" name="file" id="file" class="btn btn-default" /><br><br>
            </div>
        </div>
        @Html.Hidden("testSuiteID", @Model.TestSuiteID)
        <p></p>
        <p></p>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details", "TestSuite", new { id = Model.TestSuiteID }, "")
</div>

@using (Html.BeginForm("DeleteFile", "TestCase", new { id = Model.ID }))
{
    <div class="modal fade" id="basic" tabindex="-1" role="alert" aria-hidden="true" style="display: none;">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"> x </button>
                    <h4 class="modal-title">Delete Confirmation</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this item?
                </div>
                <div class="modal-footer">
                    <button data-dismiss="modal" type="button" class="btn btn-default">Cancel</button>
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    @Html.Hidden("item")
                </div>
            </div>
        </div>
    </div>
}
