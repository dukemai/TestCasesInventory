@using TestCasesInventory.Presenter.Models
@using PagedList;
@using PagedList.Mvc;
@using TestCasesInventory.Web.Common.Utils;

@model PagedList.IPagedList<TestSuiteViewModel>
@{
    ViewBag.Title = "TestSuite Home Page";
    Layout = "~/Areas/Tests/Views/Shared/_TestsListingLayout.cshtml";
}

<h3>TestSuites</h3>

<div class="row">
    <div class="col-xs-12">
        <div class="box">
            <div class="box-header">
                <div class="pull-left">
                    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
                </div>
                <div class="pull-right">
                    @Html.Action("FilterForTestSuite", "Filter", new { area = "" })
                </div>
            </div>
            <div class="box-body table-responsive no-padding">
                <table class="table table-hover">
                    <tbody>
                        <tr>
                            <th>
                                <h4>
                                    @Html.SortableLink(Request, "Title", "Title")

                                </h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "Team", "Team")</h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "NumberTestCases", "Number of Test Cases")</h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "CreatedBy", "Created By")</h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "LastModifiedBy", "Last Modified By")</h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "Created", "Created")</h4>
                            </th>
                            <th>
                                <h4>@Html.SortableLink(Request, "LastModified", "Last Modified")</h4>
                            </th>
                            <th>
                                <h4>Actions</h4>
                            </th>
                        </tr>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Title)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeamNameDisplayOnly)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TestCasesNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreateDisplayOnly)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastModifiedDisplayOnly)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LastModifiedDate)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })  |
                                    @Html.ActionLink("Add TestCase", "AddTestCase", new { id = item.ID })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="box-footer clearfix">
                <div class="pull-right">
                    @Html.PagedListPager(Model, page => Request.AddQueryString(new KeyValuePair<string, string>("p", page.ToString())))
                </div>
            </div>
        </div>
    </div>
</div>